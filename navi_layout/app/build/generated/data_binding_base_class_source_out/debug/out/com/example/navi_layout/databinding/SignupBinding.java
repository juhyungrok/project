// Generated by view binder compiler. Do not edit!
package com.example.navi_layout.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.navi_layout.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SignupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button checkButton;

  @NonNull
  public final Button delete;

  @NonNull
  public final Button joinButton;

  @NonNull
  public final EditText joinEmail;

  @NonNull
  public final EditText joinName;

  @NonNull
  public final EditText joinPassword;

  @NonNull
  public final EditText joinPwck;

  @NonNull
  public final TextView textView;

  private SignupBinding(@NonNull ConstraintLayout rootView, @NonNull Button checkButton,
      @NonNull Button delete, @NonNull Button joinButton, @NonNull EditText joinEmail,
      @NonNull EditText joinName, @NonNull EditText joinPassword, @NonNull EditText joinPwck,
      @NonNull TextView textView) {
    this.rootView = rootView;
    this.checkButton = checkButton;
    this.delete = delete;
    this.joinButton = joinButton;
    this.joinEmail = joinEmail;
    this.joinName = joinName;
    this.joinPassword = joinPassword;
    this.joinPwck = joinPwck;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SignupBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.signup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SignupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.check_button;
      Button checkButton = ViewBindings.findChildViewById(rootView, id);
      if (checkButton == null) {
        break missingId;
      }

      id = R.id.delete;
      Button delete = ViewBindings.findChildViewById(rootView, id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.join_button;
      Button joinButton = ViewBindings.findChildViewById(rootView, id);
      if (joinButton == null) {
        break missingId;
      }

      id = R.id.join_email;
      EditText joinEmail = ViewBindings.findChildViewById(rootView, id);
      if (joinEmail == null) {
        break missingId;
      }

      id = R.id.join_name;
      EditText joinName = ViewBindings.findChildViewById(rootView, id);
      if (joinName == null) {
        break missingId;
      }

      id = R.id.join_password;
      EditText joinPassword = ViewBindings.findChildViewById(rootView, id);
      if (joinPassword == null) {
        break missingId;
      }

      id = R.id.join_pwck;
      EditText joinPwck = ViewBindings.findChildViewById(rootView, id);
      if (joinPwck == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new SignupBinding((ConstraintLayout) rootView, checkButton, delete, joinButton,
          joinEmail, joinName, joinPassword, joinPwck, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
